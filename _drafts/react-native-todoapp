투두 앱 만들기

1. 투두 앱을 추가하는 text input 있어야 함 (1)
2. input 밑에 투두 리스트가 있어야 함 (3)
3. 투두 완료 시 스타일 변경 (2)
4. 투두 수정 기능
5. 투두 삭제 기능

* App.js 컴포넌트
  - 컨테이너 생성
  - <StatusBar?>
  - 타이틀 생성
  - 카드 생성
  - textinput 생성. textinput의 state를 관리해준다
  - newToDo의 value를 state로 받음
  - ScrollView에 ToDo 컴포넌트 렌더링
  - 플랫폼마다 스타일 속성이 다르다면 ...Platform.seleft({ios:{아이폰속성},android:{안드로이드속성}})

* ToDo.js 컴포넌트
  - ToDo는 수정중인 상태가 있음
  - 수정 시 버튼 토글
  - 또한 ToDo는 완료된 상태가 있음
  - 완료 시 스타일 변경
  - style = [styles.어쩌구, a == b ? c :d ] 이런식으로 표현가능

* ToDo 리스트
  - 투두 리스트를 만들 때 array가 아니라 object 형태로 관리하고싶음
  - const Todos = { todo1:{}, todo2:{} } 이런식으로
  - 왜? 우리는 Todo를 자주 바꿀 예정이기 때문에
  - 이러한 용도로 사용하려면 오브젝트가 적합함
  - state를 데이터베이스처럼 생각해야 한다
  - 그냥 데이터를 출력할려면 array도 괜찮은데 우리는 더 많은 것을 해야하기 때문에 object를 사요한다

* state 메서드의 prevState??

* npm prop-types

* 수정 버튼을 눌렀을 때 toDoValue를 state에 넣어주는 대신에 construct를 사용할 수 있음

* construct와 state?

* object의 네임을 변수로 설정하려면
  var pk = 'name';
  var object = {
    [pk] : 'zz'
  }

* ToDo의 완료/미완료를 투두 컴포넌트의 state에서 가져오는게 아니라 props에서 가져오는것으로 변경함
  차이점은 이제 ToDo.js가 아니라 App.j에서 관리된다는것. App.js가 컨트롤러 역할을 하게되는 것이다
  디스크에 저장하기 위한 작업임

* 투두 리스트를 디스크에 저장할 때, 우리는 투두 state를 자주 변경하게 될 텐ㄷ ㅔ같은 function을 복사붙여넣기 하고 싶지 않다.
  모든 newToDo를 받는 _saveState를 만들자.

* asyncstorage를 사용할 때에 오브젝트를 저장할 수 없다. string 만 저장할 수 있음!!
  - 작은 변수, key value object를 저장함
  - string이기만 하면 됨
  - async <-> await를 안하면 기다리지 않고 끝나버림

* event. stop propagation
